version: "3.8"

services:
  # Web Server Service
  webserver:
    image: nginx:alpine
    container_name: ${PROJECT_NAME}-webserver
    restart: unless-stopped
    tty: true
    ports:
      - "80:80"
      - "510:443"
    volumes:
      - ./src:/var/www/
      - ./nginx/conf.d/:/etc/nginx/conf.d/
    depends_on:
      - ui
    networks:
      - vc_networks

  # UI Service
  ui:
    container_name: ${PROJECT_NAME}-ui
    build:
      context: .
      dockerfile: Dockerfile.ui
    environment:
      CHOKIDAR_USEPOLLING: "true"
      NEXT_PUBLIC_API_HOST: ${NEXT_PUBLIC_API_HOST}
    volumes:
      - ./src/ui:/var/www/ui
    restart: unless-stopped
    ports:
      - 3515:3000
    networks:
      - vc_networks

  #   #Database Service
  # db:
  #   image: mysql:8.0
  #   container_name: ${PROJECT_NAME}-db
  #   restart: unless-stopped
  #   tty: true
  #   ports:
  #     - "3306:3306"
  #   volumes:
  #     - ./mysql/data:/var/lib/mysql
  #   environment:
  #     - MYSQL_DATABASE=${MYSQL_DATABASE}
  #     - MYSQL_USER=${MYSQL_USER}
  #     - MYSQL_PASSWORD=${MYSQL_PASSWORD}
  #     - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
  #   networks:
  #     - vc_networks

  # # phpMyAdmin Service
  # phpmyadmin:
  #   image: phpmyadmin/phpmyadmin
  #   container_name: ${PROJECT_NAME}-phpmyadmin
  #   restart: always
  #   environment:
  #     - PMA_HOST=${PMA_HOST}
  #     - PMA_USER=${PMA_USER}
  #     - PMA_PASSWORD=${PMA_PASSWORD}
  #     - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
  #   ports:
  #     - "8080:80"
  #   links:
  #     - db:db
  #   depends_on:
  #     - db
  #   networks:
  #     - vc_networks

networks:
  vc_networks:
